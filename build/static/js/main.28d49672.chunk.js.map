{"version":3,"sources":["icons/4.png","modules/CityComponent.js","icons/point.svg","icons/dot3.svg","modules/AirQuality.js","modules/WeatherComponent.js","App.js","index.js"],"names":["CityComponent","props","updateCity","fetchWeather","id","onSubmit","onChange","e","target","value","placeholder","type","src","trigger","alt","perfectday","WeatherInfoComponent","name","pressure","AirQuality","aqi","console","log","main","components","co","nh3","no2","o3","pm10","pm2_5","WeatherIcons","WeatherInfoIcons","sunset","sunrise","humidity","wind","WeatherComponent","timeStamp","useState","booten","setbooten","weather","isDay","icon","includes","className","Math","floor","temp","description","sys","country","Date","getHours","getMinutes","speed","onClick","delay","AppId","App","city","updateWeather","updateaqi","a","preventDefault","Axios","get","response","data","lat","coord","lon","rawData","list","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28d49672.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/4.7483085d.png\";","import React from 'react'\r\nimport './CityComponent.css'\r\nimport perfectday from \"..//icons/4.png\"\r\n\r\n\r\nconst CityComponent = (props) => {\r\n  const { updateCity, fetchWeather } = props;\r\n  return (\r\n    <>\r\n      {/*  */}\r\n      <span id=\"ChooseCityLabel\">Find Weather of your city</span>\r\n      \r\n      <form id=\"SearchBox\" onSubmit={fetchWeather}>\r\n        <input \r\n          onChange={(e) => updateCity(e.target.value)}\r\n          placeholder=\"Enter City\"\r\n        />\r\n        <button type={\"submit\"}><lord-icon\r\n    src=\"https://cdn.lordicon.com/pvbutfdk.json\"\r\n    trigger=\"hover\">\r\n</lord-icon></button>\r\n      </form>\r\n      <img alt=\"weatherlogo\" id=\"WeatherLogo\" src={perfectday} />\r\n    </>\r\n  );\r\n};\r\nexport default CityComponent;\r\n","export default __webpack_public_path__ + \"static/media/point.cbb0bf42.svg\";","export default __webpack_public_path__ + \"static/media/dot3.a360a416.svg\";","import React from 'react'\r\nimport pressure from \"../icons/point.svg\"\r\n\r\nconst WeatherInfoComponent = (props) => {\r\n  const {name, value} = props;\r\n  return (\r\n      <container id=\"InfoContainer\">\r\n          <img alt=\"aqiinfologo\" id=\"InfoIcon\" src={pressure}/>\r\n          <span id=\"InfoLabel\">\r\n              {value}\r\n              <span>{name}</span>\r\n          </span>\r\n      </container>\r\n  );\r\n};\r\n\r\nconst AirQuality = (props) =>{\r\n  const {aqi} = props; \r\n  console.log(aqi);\r\n    return (\r\n        <>\r\n        <div id=\"aqcondition\">\r\n        {(() => {\r\n  \r\n  switch (aqi?.main?.aqi) {\r\n     case 1:\r\n         return (\r\n           <div id=\"good\">Good</div>\r\n         )\r\n    case 2:\r\n         return (\r\n           <div id=\"satisfactory\">Satifactory</div>\r\n         )\r\n    case 3:\r\n         return (\r\n           <div id=\"moderate\">Moderate</div>\r\n         )\r\n    case 4:\r\n         return (\r\n           <div id=\"poor\">Poor</div>\r\n         )\r\n         \r\n     case 5:\r\n         return (\r\n           <div id=\"verypoor\">Very Poor</div>\r\n         )\r\n         case 6:\r\n         return (\r\n           <div id=\"severe\">Severe</div>\r\n         )\r\n     default:\r\n         return (\r\n           <div>Try Again Later</div>\r\n         )\r\n  }\r\n\r\n})()}</div>\r\n\r\n        <container id=\"aqInfoContainer\">\r\n            <WeatherInfoComponent name={\"Carbon Monoxide\"}\r\n                                  value={aqi?.components?.co + \" µg/m³\"}/>\r\n            <WeatherInfoComponent name={\"ammonia\"} value={aqi?.components?.nh3 + \" µg/m³\"}/>\r\n            <WeatherInfoComponent name={\"Nitrogen Dioxide\"} value={aqi?.components?.no2 + \" µg/m³\"}/>\r\n            <WeatherInfoComponent name={\"Ozone\"} value={aqi?.components?.o3 + \" µg/m³\"}/>\r\n            <WeatherInfoComponent name={\"PM 10\"} value={aqi?.components?.pm10 + \" µg/m³\"}/>\r\n            <WeatherInfoComponent name={\"PM 2.5\"} value={aqi?.components?.pm2_5 + \" µg/m³\"}/>\r\n        </container>\r\n      </>\r\n    )\r\n}\r\n\r\nexport default AirQuality;\r\n\r\n","import React,{useState} from \"react\";\r\nimport './WeatherComponent.css'\r\nimport pressure from \"../icons/dot3.svg\"\r\nimport AirQuality from \"./AirQuality\";\r\n\r\nconst WeatherIcons = {\r\n    \"01d\": \"../icons/sunny.png\",\r\n    \"01n\": \"../icons/night.png\",\r\n    \"02d\": \"../icons/day.png\",\r\n    \"02n\": \"../icons/cloudy-night.png\",\r\n    \"03d\": \"../icons/cloudy.png\",\r\n    \"03n\": \"../icons/cloudy.png\",\r\n    \"04d\": \"../icons/perfect-day.png\",\r\n    \"04n\": \"../icons/cloudy-night.png\",\r\n    \"09d\": \"../icons/rain.png\",\r\n    \"09n\": \"../icons/rain-night.png\",\r\n    \"10d\": \"../icons/rain.png\",\r\n    \"10n\": \"../icons/rain-night.png\",\r\n    \"11d\": \"../icons/storm.png\",\r\n    \"11n\": \"../icons/storm.png\"\r\n  };\r\n\r\n  const WeatherInfoIcons = {\r\n    sunset: \"../icons/temp.svg\",\r\n    sunrise: \"../icons/temp.svg\",\r\n    humidity: \"../icons/humidity.svg\",\r\n    wind: \"../icons/wind.svg\",\r\n    pressure: \"../icons/pressure.svg\",\r\n};\r\n\r\nconst WeatherInfoComponent = (props) => {\r\n    const {name, value} = props;\r\n    return (\r\n        <container id=\"InfoContainer\">\r\n            <img alt=\"weatherinfologo\" id=\"InfoIcon\" src={WeatherInfoIcons[name]}/>\r\n            <span id=\"InfoLabel\">\r\n                {value}\r\n                <span>{name}</span>\r\n            </span>\r\n        </container>\r\n    );\r\n};\r\n\r\n\r\nconst WeatherComponent = (props) => {\r\n    let [booten, setbooten] = useState(false);\r\n    const {weather} = props;\r\n    const {aqi} = props; \r\n    const isDay = weather?.weather[0].icon?.includes('d')\r\n    const getTime = (timeStamp) => {\r\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\r\n\r\n\r\n    }\r\n    const icon = weather.weather[0].icon;\r\n    console.log(icon);\r\n    console.log(booten);\r\n    \r\n    return (\r\n        \r\n           <>\r\n           <container id=\"tempContainer\">\r\n                <container id=\"condition\">\r\n                    <span className=\"temperature\">{`${Math.floor(weather?.main?.temp - 273)}°C`}</span>\r\n                    <div className=\"weather-desc\">\r\n                    {`${weather?.weather[0].description}`}\r\n                    <img className=\"side-icon\" src={WeatherIcons[icon]}/></div>\r\n                </container>\r\n                \r\n            </container>\r\n            \r\n\r\n            <span id=\"Location\">{`${weather?.name}, ${weather?.sys?.country}`}</span>\r\n\r\n            \r\n            <container id=\"WeatherInfoContainer\">\r\n                <WeatherInfoComponent name={isDay ? \"sunset\" : \"sunrise\"}\r\n                                      value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}` + \" hrs\"}/>\r\n                <WeatherInfoComponent name={\"humidity\"} value={weather?.main?.humidity + \" %\"}/>\r\n                <WeatherInfoComponent name={\"wind\"} value={weather?.wind?.speed + \" m/s\"}/>\r\n                <WeatherInfoComponent name={\"pressure\"} value={weather?.main?.pressure + \" hPa\"}/>\r\n                </container>\r\n                <button id=\"aqiButton\" onClick={() => setbooten(true)}>What's the air like <lord-icon\r\n    src=\"https://cdn.lordicon.com/njjuilvq.json\"\r\n    trigger=\"loop\"\r\n    delay=\"1000\">\r\n</lord-icon></button>\r\n                {booten ? (<AirQuality aqi={aqi}/>) : null}\r\n            \r\n            </>\r\n            \r\n            \r\n      \r\n        \r\n    );\r\n};\r\n\r\nexport default WeatherComponent;\r\n","import React, { useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport './App.css';\r\nimport CityComponent from \"./modules/CityComponent\";\r\nimport WeatherComponent from \"./modules/WeatherComponent\";\r\n\r\n\r\nconst AppId = \"fe4feefa8543e06d4f3c66d92c61b69c\";\r\n\r\nfunction App() {\r\n  const [city, updateCity] = useState();\r\n  const [weather, updateWeather] = useState();\r\n  const [aqi, updateaqi] = useState();\r\n  const fetchWeather = async (e) => {\r\n    e.preventDefault();\r\n    const response = await Axios.get(\r\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${AppId}`,\r\n      \r\n    );\r\n    console.log(response.data.weather[0]);\r\n    const lat = response.data.coord.lat;\r\n    const lon = response.data.coord.lon;\r\n    const rawData = await  Axios.get(\r\n      `https://api.openweathermap.org/data/2.5/air_pollution?lat=${lat}&lon=${lon}&appid=${AppId}`,\r\n    );\r\n    updateWeather(response.data);\r\n    updateaqi(rawData.data.list[0]);\r\n    console.log(rawData.data.list[0]);\r\n    \r\n  };\r\n  return (\r\n\r\n    <container id=\"Container\">\r\n      <span id=\"AppLabel\">Weather App <lord-icon\r\n    src=\"https://cdn.lordicon.com/uvextprq.json\"\r\n    trigger=\"loop\"\r\n    delay=\"3000\">\r\n      </lord-icon></span>\r\n      {city && weather ? (\r\n        <WeatherComponent weather={weather} city={city} aqi={aqi} />\r\n      ) : \r\n     \r\n       (\r\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\r\n      )}\r\n      <div id=\"copyright\">©Hardiksehgal</div>\r\n    </container>\r\n    \r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}